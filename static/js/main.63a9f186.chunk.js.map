{"version":3,"sources":["assets/images/temp-logo.png","components/navbar.component.jsx","components/todo-list.component.jsx","components/edit-todo.component.jsx","components/create-todo.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","state","className","to","src","logo","alt","Component","Todo","props","todo","todo_completed","todo_description","todo_responsible","todo_priority","_id","TodoList","todos","axios","get","then","response","setState","data","catch","error","console","log","this","map","currentTodo","i","key","todoList","EditTodo","onChangeTodoDescription","bind","onChangeTodoResponsible","onChangeTodoPriority","onChangeTodoCompleted","onSubmit","onDelete","match","params","id","e","target","value","preventDefault","obj","post","history","push","delete","autoComplete","htmlFor","type","onChange","name","checked","onClick","CreateTodo","newTodo","res","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.63a9f186.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/temp-logo.ee6114b1.png\";","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport logo from \"../assets/images/temp-logo.png\";\n\nclass Navbar extends Component {\n    state = {  }\n    render() { \n        return (\n            <div className=\"navbar\">\n                <Link to=\"/\" className=\"nav-link\">\n                    <img src={ logo } alt=\"Main logo\" className=\"nav-logo\" />\n                </Link>\n                <ul className=\"nav-list\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\">Task List</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/create\" className=\"nav-link\">Create Task</Link>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n \nexport default Navbar;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Todo = props => (\n    <tr>\n        <td className={props.todo.todo_completed ? 'completed-task' : ''}>{props.todo.todo_description}</td>\n        <td className={props.todo.todo_completed ? 'completed-task' : ''}>{props.todo.todo_responsible}</td>\n        <td className={props.todo.todo_completed ? 'completed-task' : ''}>{props.todo.todo_priority}</td>\n        <td>\n            <Link to={\"/edit/\"+props.todo._id} className=\"todo-action-button edit-todo-button btn\">Edit</Link>\n            <Link to={\"/delete/\"+props.todo._id} className=\"todo-action-button delete-todo-button btn\">Delete</Link>\n        </td>\n    </tr>\n)\n\nclass TodoList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todos: []\n        };\n    }\n\n    componentDidMount() {\n        axios.get('https://hjm-todo-app.herokuapp.com/todos/')\n                .then(response => {\n                    this.setState({todos: response.data});\n                })\n                .catch(function (error) {\n                    console.log(error);\n                })\n    }\n\n    // componentDidUpdate() {\n    //     axios.get('http://localhost:5000/todos/')\n    //             .then(response => {\n    //                 this.setState({todos: response.data});\n    //             })\n    //             .catch(function (error) {\n    //                 console.log(error);\n    //             })\n    // }\n\n    todoList() {\n        return this.state.todos.map(function(currentTodo, i) {\n            return <Todo todo={currentTodo} key={i} />;\n        });\n    }\n\n    render() { \n        return (\n            <div className=\"todo-list-container component-container\">\n                <h2>Task List</h2>\n                <div className=\"table-wrapper\">\n                    <table className=\"todo-list-table\">\n                        <thead>\n                            <tr>\n                                <th>Description</th>\n                                <th>Responsible</th>\n                                <th>Priority</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            { this.todoList() }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default TodoList;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass EditTodo extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\n        this.onChangeTodoCompleted = this.onChangeTodoCompleted.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onDelete = this.onDelete.bind(this);\n\n        this.state = {\n            todo_description: '',\n            todo_responsible: '',\n            todo_priority: '',\n            todo_completed: false\n        }\n    }\n\n    componentDidMount() {\n        axios.get('https://hjm-todo-app.herokuapp.com/todos/'+this.props.match.params.id)\n            .then(response => {\n                this.setState({\n                    todo_description: response.data.todo_description,\n                    todo_responsible: response.data.todo_responsible,\n                    todo_priority: response.data.todo_priority,\n                    todo_completed: response.data.todo_completed\n                })\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n    onChangeTodoDescription(e) {\n        this.setState({\n            todo_description: e.target.value\n        });\n    }\n\n    onChangeTodoResponsible(e) {\n        this.setState({\n            todo_responsible: e.target.value\n        });\n    }\n\n    onChangeTodoPriority(e) {\n        this.setState({\n            todo_priority: e.target.value\n        });\n    }\n\n    onChangeTodoCompleted(e) {\n        this.setState({\n            todo_completed: !this.state.todo_completed\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const obj = {\n            todo_description: this.state.todo_description,\n            todo_responsible: this.state.todo_responsible,\n            todo_priority: this.state.todo_priority,\n            todo_completed: this.state.todo_completed\n        };\n\n        axios.post('https://hjm-todo-app.herokuapp.com/todos/update/'+this.props.match.params.id, obj)\n            .then(response => {\n                console.log(response.data);\n                this.props.history.push('/');\n            });\n    }\n\n    onDelete() {\n        axios.delete('https://hjm-todo-app.herokuapp.com/todos/'+this.props.match.params.id)\n            .then(response => {\n                console.log(response.data);\n                this.props.history.push('/');\n            });\n    }\n    render() { \n        return (\n            <div className=\"create-todo-container component-container\">\n                <h2>Edit Task</h2>\n                <form onSubmit={this.onSubmit} autoComplete=\"off\" className=\"create-todo-form\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-description\">Description: </label>\n                        <input  type=\"text\" \n                                className=\"form-control\"\n                                id=\"input-description\"\n                                value={ this.state.todo_description }\n                                onChange={ this.onChangeTodoDescription }\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-responsible\">Responsible: </label>\n                        <input  type=\"text\" \n                                className=\"form-control\"\n                                id=\"input-responsible\"\n                                value={ this.state.todo_responsible }\n                                onChange={ this.onChangeTodoResponsible }\n                        />\n                    </div>\n                    <div className=\"form-group radio-group\">\n                        <div>\n                            <input  type=\"radio\"\n                                    className=\"form-check-input\"\n                                    name = \"priorityOptions\"\n                                    id = \"priorityLow\"\n                                    value=\"Low\"\n                                    checked={ this.state.todo_priority === 'Low' }\n                                    onChange={ this.onChangeTodoPriority }\n                            />\n                            <label htmlFor=\"priorityLow\">Low</label>\n                        </div>\n                        <div>\n                            <input  type=\"radio\"\n                                    className=\"form-check-input\"\n                                    name = \"priorityOptions\"\n                                    id = \"priorityMedium\"\n                                    value=\"Medium\"\n                                    checked={ this.state.todo_priority === 'Medium' }\n                                    onChange={ this.onChangeTodoPriority }\n                            />\n                            <label htmlFor=\"priorityMedium\">Medium</label>\n                        </div>\n                        <div>\n                            <input  type=\"radio\"\n                                    className=\"form-check-input\"\n                                    name = \"priorityOptions\"\n                                    id = \"priorityHigh\"\n                                    value=\"High\"\n                                    checked={ this.state.todo_priority === 'High' }\n                                    onChange={ this.onChangeTodoPriority }\n                            />\n                            <label htmlFor=\"priorityHigh\">High</label>\n                        </div>         \n                    </div>\n                    <div className=\"form-check\">\n                        <input  type=\"checkbox\" \n                                id=\"completed-checkbox\"\n                                name=\"completed-checkbox\"\n                                onChange={ this.onChangeTodoCompleted }\n                                checked={ this.state.todo_completed }\n                                value={ this.state.todo_completed }   \n                        />\n                        <label htmlFor=\"completed-checkbox\" className=\"form-check-label\">\n                            Completed\n                        </label>\n                    </div>\n                    <input type=\"submit\" value=\"Update Task\" className=\"btn create-todo-submit\" />\n                </form>\n                <button onClick={this.onDelete}>Delete</button>\n            </div>\n        );\n    }\n}\n \nexport default EditTodo;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass CreateTodo extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            todo_description: '',\n            todo_responsible: '',\n            todo_priority: '',\n            todo_completed: false\n        }\n    }\n\n    onChangeTodoDescription(e) {\n        this.setState({\n            todo_description: e.target.value\n        });\n    }\n\n    onChangeTodoResponsible(e) {\n        this.setState({\n            todo_responsible: e.target.value\n        });\n    }\n\n    onChangeTodoPriority(e) {\n        this.setState({\n            todo_priority: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        console.log(`Form Submitted: `);\n        console.log(`Todo Description: ${this.state.todo_description}`);\n        console.log(`Todo Responsible: ${this.state.todo_responsible}`);\n        console.log(`Todo Priority: ${this.state.todo_priority}`);\n        console.log(`Todo Completed: ${this.state.todo_completed}`);\n\n        const newTodo = {\n            todo_description: this.state.todo_description,\n            todo_responsible: this.state.todo_responsible,\n            todo_priority: this.state.todo_priority,\n            todo_completed: this.state.todo_completed\n        }\n\n        axios.post('https://hjm-todo-app.herokuapp.com/todos/add', newTodo)\n                .then(res => console.log(res.data));\n\n        this.setState({\n            todo_description: '',\n            todo_responsible: '',\n            todo_priority: '',\n            todo_completed: false\n        });\n    }\n\n    render() { \n        return (\n            <div className=\"create-todo-container component-container\">\n                <h2>Create New Task</h2>\n                <form onSubmit={ this.onSubmit } autoComplete=\"off\" className=\"create-todo-form\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-description\">Description: </label>\n                        <input  type=\"text\" \n                                className=\"form-control\"\n                                id=\"input-description\"\n                                value={ this.state.todo_description }\n                                onChange={ this.onChangeTodoDescription }\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-responsible\">Responsible: </label>\n                        <input  type=\"text\" \n                                className=\"form-control\"\n                                id=\"input-responsible\"\n                                value={ this.state.todo_responsible }\n                                onChange={ this.onChangeTodoResponsible }\n                        />\n                    </div>\n                    <div className=\"form-group radio-group\">\n                        <div>\n                            <input  type=\"radio\"\n                                    className=\"form-check-input\"\n                                    name = \"priorityOptions\"\n                                    id = \"priorityLow\"\n                                    value=\"Low\"\n                                    checked={ this.state.todo_priority === 'Low' }\n                                    onChange={ this.onChangeTodoPriority }\n                            />\n                            <label htmlFor=\"priorityLow\">Low</label>\n                        </div>\n                        <div>\n                            <input  type=\"radio\"\n                                    className=\"form-check-input\"\n                                    name = \"priorityOptions\"\n                                    id = \"priorityMedium\"\n                                    value=\"Medium\"\n                                    checked={ this.state.todo_priority === 'Medium' }\n                                    onChange={ this.onChangeTodoPriority }\n                            />\n                            <label htmlFor=\"priorityMedium\">Medium</label>\n                        </div>\n                        <div>\n                            <input  type=\"radio\"\n                                    className=\"form-check-input\"\n                                    name = \"priorityOptions\"\n                                    id = \"priorityHigh\"\n                                    value=\"High\"\n                                    checked={ this.state.todo_priority === 'High' }\n                                    onChange={ this.onChangeTodoPriority }\n                            />\n                            <label htmlFor=\"priorityHigh\">High</label>\n                        </div>         \n                    </div>\n                    <input type=\"submit\" value=\"Create Task\" className=\"btn create-todo-submit\" />\n                </form>\n            </div>\n        );\n    }\n}\n \nexport default CreateTodo;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\n\nimport Navbar from \"./components/navbar.component\";\nimport TodoList from \"./components/todo-list.component\";\nimport EditTodo from \"./components/edit-todo.component\";\nimport CreateTodo from \"./components/create-todo.component\";\n\nclass App extends Component {\n  state = {  }\n  render() { \n    return (\n      <Router>\n        <div className=\"container\">\n          <Navbar />\n          <div className=\"main\">\n            <Route path=\"/\" exact component={TodoList} />\n            <Route path=\"/edit/:id\" exact component={EditTodo} />\n            <Route path=\"/create\" exact component={CreateTodo} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}